<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>gs.hasRole('admin') &amp;&amp; typeof parent != 'undefined' &amp;&amp; parent.getTableName() == 'x_376096_dla_leak_result'</condition>
        <form_action>false</form_action>
        <form_button>false</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>true</isolate_script>
        <list_action>true</list_action>
        <list_banner_button>true</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages>dla_all_acls_public&#13;
dla_no_public_acls_found&#13;
Warning</messages>
        <name>Filter Public</name>
        <onclick>filterPublicACLs();</onclick>
        <order>100</order>
        <script><![CDATA[/* global g_list, g_form, jslog, nowapi, GlideAjax, getMessages, GlideModal */
/* eslint no-undef: "error" */
function filterPublicACLs() {
	var query = g_list.getQuery();
	var ga = new GlideAjax('x_376096_dla.DLAUtilClient');
	ga.addParam('sysparm_name', 'filterPublicACLs');
	ga.addParam('data_leak', g_form.getUniqueValue());
	ga.addParam('filter', g_list.getQuery());
	ga.getXMLAnswer(function (result) {
		result = JSON.parse(result);
		if (result.status == 'success') {
			if (result.public_acls) {
				if (result.all_public) {
					info('dla_all_acls_public');
				} else {
					g_list.addFilter('sys_idIN' + result.public_acls.join(','));
					g_list.refresh();
				}
			} else {
				info('dla_no_public_acls_found');
			}		
		} else if (result.message) {
			jslog(result.message);
		}
	});
	
	function info(msg_key) {
		nowapi.g_i18n.getMessages(['Warning', msg_key], function (msgs) {
			var dialog = new GlideModal('glide_warn', false);
			dialog.setTitle(msgs['Info']);
			dialog.setPreference('title', msgs[msg_key]);
			dialog.render();
		});
	}
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-28 08:17:37</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>1cce9257970e3d103c2d3f56f053af55</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>Filter Public</sys_name>
        <sys_overrides/>
        <sys_package display_value="Data Leak Analyser" source="x_376096_dla">7ab9de70978671103c2d3f56f053af17</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Data Leak Analyser">7ab9de70978671103c2d3f56f053af17</sys_scope>
        <sys_update_name>sys_ui_action_1cce9257970e3d103c2d3f56f053af55</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-11-20 14:07:27</sys_updated_on>
        <table>sys_security_acl</table>
        <u_rfc/>
        <ui11_compatible>false</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
