<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description>Used by UI Action 'Show leaked records'</description>
        <direct>true</direct>
        <endpoint>x_376096_dla_leaks.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<g2:evaluate>
		const errorMessage = RP.getParameterValue('error_message');
		const historicACL = RP.getParameterValue('historic_acl');
		const leakResult = RP.getParameterValue('leak_result');
		
		const attGr = new GlideRecordSecure('sys_attachment');
		attGr.addQuery('table_name', 'x_376096_dla_historic_acl');
		attGr.addQuery('file_name', 'STARTSWITH', 'leaked_');
		if (historicACL) {
			attGr.addQuery('table_sys_id', historicACL);
		} else if (leakResult) {
			const histGr = new GlideRecordSecure('x_376096_dla_historic_acl');
			histGr.addQuery('leak_result', leakResult);
			histGr.query();
		
			const histSysIDs = [];
			while (histGr.next()) {
				histSysIDs.push(histGr.getUniqueValue());
			}
		
			attGr.addQuery('table_sys_id', 'IN', histSysIDs);
		} else {
			attGr.addQuery('table_sys_id', 'x');
		}
		
		attGr.query();
		const gsa = new GlideSysAttachment();
	</g2:evaluate>
	<j2:if test="$[!!errorMessage]">
		<p style="color: red">$[HTML:errorMessage]</p>
	</j2:if>
	<j2:if test="$[!errorMessage]">
		<g:ui_form>
			<input type="hidden" name="historic_acl" value="$[historicACL]" />
			<input type="hidden" name="leak_result" value="$[leakResult]" />
			<a href='#' onclick='this.parentNode.submit(); return false;'>${gs.getMessage('dla_show_list')}</a>
			<textarea style="height: 300px; width: 100%;" onclick="this.setSelectionRange(0, this.value.length);" readonly="readonly" name="leak_sys_ids">
				<j2:while test="$[attGr.next()]">
					$[gsa.getContent(attGr).split(',').join('\n') + '\n']
				</j2:while>
			</textarea>
		</g:ui_form>
	</j2:if>
</j:jelly>]]></html>
        <name>leaks</name>
        <processing_script><![CDATA[/* global gs, GlideRecordSecure */
/* global request, response */
/* eslint no-undef: "error" */
(function (request, response) {
	// request [GlideServletRequest]
	// https://developer.servicenow.com/dev.do#!/reference/api/sandiego/server/no-namespace/c_GlideServletRequestScopedAPI
	
	// response [GlideServletResponse]
	// https://developer.servicenow.com/dev.do#!/reference/api/sandiego/server/no-namespace/c_GlideServletResponseScopedAPI
	
	// this
	// [represents the values from the <g:ui_form>]
	
	// prevent refresh loop when there analysis hasn't yielded any results
	let table = '';
	let errorMessage = '';
	if (this.historic_acl) {
		const histAclGr = new GlideRecordSecure('x_376096_dla_historic_acl');
		histAclGr.addQuery('sys_id', this.historic_acl);
		histAclGr.setLimit(1);
		histAclGr.query();
		if (histAclGr.next()) {
			table = histAclGr.leak_result.table.toString();
		} else {
			errorMessage = gs.getMessage('dla_record_unauthorized_or_invalid_record');
		}
	} else if (this.leak_result) {
		const leakResultGr = new GlideRecordSecure('x_376096_dla_leak_result');
		leakResultGr.addQuery('sys_id', this.leak_result);
		leakResultGr.setLimit(1);
		leakResultGr.query();
		if (leakResultGr.next()) {
			table = leakResultGr.table.toString();
		} else {
			errorMessage = gs.getMessage('dla_record_unauthorized_or_invalid_record');
		}
	}
	
	if (table) {
		response.sendRedirect(table + '_list.do?sysparm_query=sys_idIN' + this.leak_sys_ids.split('\n').join(','));
	} else {
		response.sendRedirect('x_376096_dla_leaks.do?error_message=' + encodeURIComponent(errorMessage));
	}
	
}).call(this, request, response);]]></processing_script>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-29 22:29:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b068e6bb9782fd103c2d3f56f053af3d</sys_id>
        <sys_mod_count>45</sys_mod_count>
        <sys_name>leaks</sys_name>
        <sys_package display_value="Data Leak Analyser" source="x_376096_dla">7ab9de70978671103c2d3f56f053af17</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Data Leak Analyser">7ab9de70978671103c2d3f56f053af17</sys_scope>
        <sys_update_name>sys_ui_page_b068e6bb9782fd103c2d3f56f053af3d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-11-10 06:26:27</sys_updated_on>
    </sys_ui_page>
</record_update>
