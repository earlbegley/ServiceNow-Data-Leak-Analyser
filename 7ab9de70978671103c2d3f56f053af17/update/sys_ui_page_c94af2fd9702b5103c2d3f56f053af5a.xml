<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description/>
        <direct>false</direct>
        <endpoint>x_376096_dla_analyse_acls.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<g:inline template="x_376096_dla_dashboard_actions.xml"/>
	<g2:evaluate var="jvar_refresh" expression="RP.getParameterValue('refresh')" />
	<j2:if test="$[!empty(jvar_refresh)]">
		<script>
			(function refreshReportTable() {
				if (window.parent) {
					window.parent.document
						.querySelectorAll(".header-icon.icon-refresh").forEach(function (element) {
						element.click();
					});
				}
			})();
		</script>
	</j2:if>
	<g:ui_form>
		<table>
			<tr>
				<td><input type="checkbox" disabled="disabled" checked="checked" /></td>
				<td>ACLs with no roles</td>
			</tr>
			<tr>
				<td><input type="checkbox" disabled="disabled" checked="checked" /></td>
				<td>ACLs with public roles</td>
			</tr>
			<tr>
				<td><input type="checkbox" disabled="disabled" /></td>
				<td>Reopen closed tasks</td>
			</tr>
			<tr>
				<td><input type="checkbox" disabled="disabled" checked="checked" /></td>
				<td>Add changed analysis results to 'Work notes'</td>
			</tr>
		</table>
		<button class="action button" type="submit" onclick="this.disabled=true; this.form.submit();">
			${gs.getMessage('dla_run_analysis')}
		</button>
	</g:ui_form>
	<g2:evaluate>
		const skipAnalysis = RP.getParameterValue('skip_analysis') == 'true';
		const aclResultGr = new GlideRecord('x_376096_dla_acl_result');
		aclResultGr.setLimit(1);
		aclResultGr.query();
		
		let runACLAnalysis = false;
		if (!aclResultGr.hasNext() $[AND] !skipAnalysis) {
			runACLAnalysis = true;
		}
	</g2:evaluate>
	<j2:if test="$[runACLAnalysis]">
		<script>
			(function () {
				document.querySelector('#form\\.c94af2fd9702b5103c2d3f56f053af5a button').click();
			})();
		</script>
	</j2:if>
</j:jelly>]]></html>
        <name>analyse_acls</name>
        <processing_script><![CDATA[/* global x_376096_dla, sn_pdfgeneratorutils, GlideRecord, GlideSysAttachment */
/* global request, response */
/* eslint no-undef: "error" */
(function (request, response) {
	// request [GlideServletRequest]
	// https://developer.servicenow.com/dev.do#!/reference/api/sandiego/server/no-namespace/c_GlideServletRequestScopedAPI
	
	// response [GlideServletResponse]
	// https://developer.servicenow.com/dev.do#!/reference/api/sandiego/server/no-namespace/c_GlideServletResponseScopedAPI
	
	// this
	// [represents the values from the <g:ui_form>]
	const dlaUtil = new x_376096_dla.DLAUtil();
	const analysis = dlaUtil.analyseACLs();	
	
	const aclSysIDs = [];
	analysis.forEach(acl => {
		aclSysIDs.push(acl.sys_id);
		const aclResultGr = new GlideRecord('x_376096_dla_acl_result');
		aclResultGr.addQuery('acl', acl.sys_id);
		aclResultGr.setLimit(1);
		aclResultGr.query();
		if (!aclResultGr.hasNext()) {
			aclResultGr.newRecord();
			aclResultGr.acl = acl.sys_id;
			aclResultGr.short_description = 'ACL potentially enabling public access';
			aclResultGr.description = 'This ACL has been identified as "Potentially Enabling Public Access".\nReason: ' + acl.reason + '\n\nPlease examine if the ACL serves this purpose by design. If not take the necessary steps to protect the instance from unauthorized access.';
			aclResultGr.insert();
		}
	});
	
	const aclResultGr = new GlideRecord('x_376096_dla_acl_result');
	aclResultGr.addQuery('active', true);
	aclResultGr.addQuery('acl', 'NOT IN', aclSysIDs);
	aclResultGr.setValue('state', 3); // closed complete
	aclResultGr.setValue('work_notes', 'Task has been closed as the affected ACL is no longer included in the latest ACL analysis.');
	aclResultGr.updateMultiple();

	// prevent refresh loop when there analysis hasn't yielded any results
	response.sendRedirect('x_376096_dla_analyse_acls.do?refresh=true&skip_analysis=' + String(aclSysIDs.length == 0));
}).call(this, request, response);]]></processing_script>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-23 18:29:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>c94af2fd9702b5103c2d3f56f053af5a</sys_id>
        <sys_mod_count>44</sys_mod_count>
        <sys_name>analyse_acls</sys_name>
        <sys_package display_value="Data Leak Analyser" source="x_376096_dla">7ab9de70978671103c2d3f56f053af17</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Data Leak Analyser">7ab9de70978671103c2d3f56f053af17</sys_scope>
        <sys_update_name>sys_ui_page_c94af2fd9702b5103c2d3f56f053af5a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-11-10 06:41:36</sys_updated_on>
    </sys_ui_page>
</record_update>
